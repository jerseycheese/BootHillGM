/**
 * Centralized Action Types
 * 
 * Single source of truth for all action types in the application.
 * Using namespaced format for clarity and organization.
 */

export const ActionTypes = {
  // Global state actions
  SET_STATE: 'global/SET_STATE',
  RESET_STATE: 'global/RESET_STATE',
  SAVE_GAME: 'global/SAVE_GAME',
  LOAD_GAME: 'global/LOAD_GAME',
  
  // Character actions
  SET_CHARACTER: 'character/SET_CHARACTER',
  UPDATE_CHARACTER: 'character/UPDATE_CHARACTER',
  SET_OPPONENT: 'character/SET_OPPONENT',
  UPDATE_OPPONENT: 'character/UPDATE_OPPONENT',
  
  // Combat actions
  SET_COMBAT_ACTIVE: 'combat/SET_COMBAT_ACTIVE',
  UPDATE_COMBAT_STATE: 'combat/UPDATE_STATE',
  SET_COMBAT_TYPE: 'combat/SET_COMBAT_TYPE',
  END_COMBAT: 'combat/END_COMBAT',
  RESET_COMBAT: 'combat/RESET_COMBAT',
  SET_COMBATANTS: 'combat/SET_COMBATANTS',
  ADD_LOG_ENTRY: 'combat/ADD_LOG_ENTRY',
  NEXT_ROUND: 'combat/NEXT_ROUND',
  TOGGLE_TURN: 'combat/TOGGLE_TURN',
  UPDATE_MODIFIERS: 'combat/UPDATE_MODIFIERS',

  // Inventory actions
  ADD_ITEM: 'inventory/ADD_ITEM',
  REMOVE_ITEM: 'inventory/REMOVE_ITEM',
  EQUIP_WEAPON: 'inventory/EQUIP_WEAPON',
  USE_ITEM: 'inventory/USE_ITEM',
  UPDATE_ITEM_QUANTITY: 'inventory/UPDATE_ITEM_QUANTITY',
  UNEQUIP_WEAPON: 'inventory/UNEQUIP_WEAPON',
  SET_INVENTORY: 'inventory/SET_INVENTORY',
  CLEAN_INVENTORY: 'inventory/CLEAN_INVENTORY',
  
  // Journal actions
  ADD_ENTRY: 'journal/ADD_ENTRY',
  REMOVE_ENTRY: 'journal/REMOVE_ENTRY',
  UPDATE_JOURNAL: 'journal/UPDATE_ENTRY', // For specific entry updates
  SET_ENTRIES: 'journal/SET_ENTRIES',
  CLEAR_ENTRIES: 'journal/CLEAR_ENTRIES',
  UPDATE_JOURNAL_GENERAL: 'journal/UPDATE_JOURNAL', // For general/new entry updates

  // Narrative actions
  ADD_NARRATIVE_HISTORY: 'narrative/ADD_NARRATIVE_HISTORY',
  SET_NARRATIVE_CONTEXT: 'narrative/SET_NARRATIVE_CONTEXT',
  UPDATE_NARRATIVE: 'narrative/UPDATE_NARRATIVE',
  RESET_NARRATIVE: 'narrative/RESET_NARRATIVE',
  NAVIGATE_TO_POINT: 'narrative/NAVIGATE_TO_POINT',
  SELECT_CHOICE: 'narrative/SELECT_CHOICE',
  SET_DISPLAY_MODE: 'narrative/SET_DISPLAY_MODE',
  START_NARRATIVE_ARC: 'narrative/START_NARRATIVE_ARC',
  COMPLETE_NARRATIVE_ARC: 'narrative/COMPLETE_NARRATIVE_ARC',
  ACTIVATE_BRANCH: 'narrative/ACTIVATE_BRANCH',
  COMPLETE_BRANCH: 'narrative/COMPLETE_BRANCH',

  // Decision actions
  PRESENT_DECISION: 'decision/PRESENT_DECISION',
  RECORD_DECISION: 'decision/RECORD_DECISION',
  CLEAR_CURRENT_DECISION: 'decision/CLEAR_CURRENT_DECISION',
  PROCESS_DECISION_IMPACTS: 'decision/PROCESS_DECISION_IMPACTS',
  UPDATE_IMPACT_STATE: 'decision/UPDATE_IMPACT_STATE',
  EVOLVE_IMPACTS: 'decision/EVOLVE_IMPACTS',

  // Story Progression actions
  ADD_STORY_POINT: 'story/ADD_STORY_POINT',
  UPDATE_CURRENT_POINT: 'story/UPDATE_CURRENT_POINT',
  MARK_BRANCHING_POINT_TAKEN: 'story/MARK_BRANCHING_POINT_TAKEN',
  RESET_STORY_PROGRESSION: 'story/RESET_STORY_PROGRESSION',

  // UI actions
  SET_ACTIVE_TAB: 'ui/SET_ACTIVE_TAB',
  ADD_NOTIFICATION: 'ui/ADD_NOTIFICATION',
  REMOVE_NOTIFICATION: 'ui/REMOVE_NOTIFICATION',
  SET_LOADING: 'ui/SET_LOADING',
  OPEN_MODAL: 'ui/OPEN_MODAL',
  CLOSE_MODAL: 'ui/CLOSE_MODAL',
  CLEAR_NOTIFICATIONS: 'ui/CLEAR_NOTIFICATIONS',
  SET_SOUND_ENABLED: 'ui/SET_SOUND_ENABLED',
  SET_MUSIC_ENABLED: 'ui/SET_MUSIC_ENABLED',
  SET_TEXT_SPEED: 'ui/SET_TEXT_SPEED',
  SET_FONT_SIZE: 'ui/SET_FONT_SIZE',
  SET_THEME: 'ui/SET_THEME',
  
  // Game state actions
  SET_PLAYER: 'game/SET_PLAYER',
  ADD_NPC: 'game/ADD_NPC',
  SET_LOCATION: 'game/SET_LOCATION',
  ADD_QUEST: 'game/ADD_QUEST',
  SET_GAME_PROGRESS: 'game/SET_GAME_PROGRESS',
  SET_SAVED_TIMESTAMP: 'game/SET_SAVED_TIMESTAMP',
  SET_SUGGESTED_ACTIONS: 'game/SET_SUGGESTED_ACTIONS',

  // Lore actions
  ADD_LORE_FACT: 'lore/ADD_LORE_FACT',
  UPDATE_LORE_FACT: 'lore/UPDATE_LORE_FACT',
  INVALIDATE_LORE_FACT: 'lore/INVALIDATE_LORE_FACT',
  VALIDATE_LORE_FACT: 'lore/VALIDATE_LORE_FACT',
  ADD_RELATED_FACTS: 'lore/ADD_RELATED_FACTS',
  REMOVE_RELATED_FACTS: 'lore/REMOVE_RELATED_FACTS',
  ADD_FACT_TAGS: 'lore/ADD_FACT_TAGS',
  REMOVE_FACT_TAGS: 'lore/REMOVE_FACT_TAGS',
  PROCESS_LORE_EXTRACTION: 'lore/PROCESS_LORE_EXTRACTION',

  // Error actions
  NARRATIVE_ERROR: 'error/NARRATIVE_ERROR',
  CLEAR_ERROR: 'error/CLEAR_ERROR'

} as const; // Add 'as const' for literal types